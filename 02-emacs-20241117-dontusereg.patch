diff --git a/nt/addpm.c b/nt/addpm.c
index 6aee45d8149..d934fd8475b 100644
--- a/nt/addpm.c
+++ b/nt/addpm.c
@@ -56,10 +56,6 @@ along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.  */
 #include <shlobj.h>
 #include <ddeml.h>
 
-#ifndef OLD_PATHS
-#include "../src/epaths.h"
-#endif
-
 HDDEDATA CALLBACK DdeCallback (UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, DWORD_PTR,
 			       DWORD_PTR);
 
@@ -75,100 +71,6 @@ DdeCallback (UINT uType, UINT uFmt, HCONV hconv,
 	DdeClientTransaction ((LPBYTE)str, strlen (str)+1, conversation, (HSZ)NULL, \
 		              CF_TEXT, XTYP_EXECUTE, 30000, NULL)
 
-#define REG_ROOT "SOFTWARE\\GNU\\Emacs"
-#define REG_APP_PATH \
-  "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\emacs.exe"
-
-static struct entry
-{
-  const char *name;
-  const char *value;
-}
-env_vars[] =
-{
-#ifdef OLD_PATHS
-  {"emacs_dir", NULL},
-  {"EMACSLOADPATH", "%emacs_dir%/site-lisp;%emacs_dir%/../site-lisp;%emacs_dir%/lisp"},
-  {"SHELL", "%emacs_dir%/bin/cmdproxy.exe"},
-  {"EMACSDATA", "%emacs_dir%/etc"},
-  {"EMACSPATH", "%emacs_dir%/bin"},
-  /* We no longer set INFOPATH because Info-default-directory-list
-     is then ignored.  */
-  /*  {"INFOPATH", "%emacs_dir%/info"},  */
-  {"EMACSDOC", "%emacs_dir%/etc"},
-  {"TERM", "cmd"}
-#else  /* !OLD_PATHS */
-  {"emacs_dir", NULL},
-  {"EMACSLOADPATH", PATH_SITELOADSEARCH ";" PATH_LOADSEARCH},
-  {"SHELL", PATH_EXEC "/cmdproxy.exe"},
-  {"EMACSDATA", PATH_DATA},
-  {"EMACSPATH", PATH_EXEC},
-  /* We no longer set INFOPATH because Info-default-directory-list
-     is then ignored.  */
-  /*  {"INFOPATH", "%emacs_dir%/info"},  */
-  {"EMACSDOC", PATH_DOC},
-  {"TERM", "cmd"}
-#endif
-};
-
-static void
-add_registry (const char *path)
-{
-  HKEY hrootkey = NULL;
-  int i;
-
-  /* Record the location of Emacs to the App Paths key if we have
-     sufficient permissions to do so.  This helps Windows find emacs quickly
-     if the user types emacs.exe in the "Run Program" dialog without having
-     emacs on their path.  Some applications also use the same registry key
-     to discover the installation directory for programs they are looking for.
-     Multiple installations cannot be handled by this method, but it does not
-     affect the general operation of other installations of Emacs, and we
-     are blindly overwriting the Start Menu entries already.
-  */
-  if (RegCreateKeyEx (HKEY_LOCAL_MACHINE, REG_APP_PATH, 0, NULL,
-                      REG_OPTION_NON_VOLATILE, KEY_WRITE, NULL,
-                      &hrootkey, NULL) == ERROR_SUCCESS)
-    {
-      int len;
-      char *emacs_path;
-
-      len = strlen (path) + 15; /* \bin\emacs.exe + terminator.  */
-      emacs_path = (char *) alloca (len);
-      sprintf (emacs_path, "%s\\bin\\emacs.exe", path);
-
-      RegSetValueEx (hrootkey, NULL, 0, REG_EXPAND_SZ, emacs_path, len);
-      RegCloseKey (hrootkey);
-    }
-
-  /* Previous versions relied on registry settings, but we do not need
-     them any more.  If registry settings are installed from a previous
-     version, replace them to ensure they are the current settings.
-     Otherwise, do nothing.  */
-
-  /* Check both the current user and the local machine to see if we
-     have any resources.  */
-
-  if (RegOpenKeyEx (HKEY_LOCAL_MACHINE, REG_ROOT, 0,
-		    KEY_WRITE | KEY_QUERY_VALUE, &hrootkey) != ERROR_SUCCESS
-      && RegOpenKeyEx (HKEY_CURRENT_USER, REG_ROOT, 0,
-		       KEY_WRITE | KEY_QUERY_VALUE, &hrootkey) != ERROR_SUCCESS)
-    return;
-
-  for (i = 0; i < (sizeof (env_vars) / sizeof (env_vars[0])); i++)
-    {
-      const char * value = env_vars[i].value ? env_vars[i].value : path;
-
-      /* Replace only those settings that already exist.  */
-      if (RegQueryValueEx (hrootkey, env_vars[i].name, NULL,
-			   NULL, NULL, NULL) == ERROR_SUCCESS)
-	RegSetValueEx (hrootkey, env_vars[i].name, 0, REG_EXPAND_SZ,
-		       value, lstrlen (value) + 1);
-    }
-
-  RegCloseKey (hrootkey);
-}
-
 int
 main (int argc, char *argv[])
 {
@@ -236,7 +138,6 @@ main (int argc, char *argv[])
 	}
     }
 
-  add_registry (emacs_path);
   prog_name =  "runemacs.exe";
 
   /* Try to install globally.  */
